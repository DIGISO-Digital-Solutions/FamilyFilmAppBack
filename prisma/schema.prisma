// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            Int    @id @default(autoincrement())
  email         String @unique
  firebase_uuid String
  role          Role   @default(USER)

  groups GroupUsers[]
}

model Group {
  id        Int          @id @default(autoincrement())
  name      String
  user_id   Int
  users     GroupUsers[]
  watchList WatchList[]
  viewList  ViewList[]
}

model GroupUsers {
  user_id  Int
  group_id Int

  user  User  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  group Group @relation(fields: [group_id], references: [id], onDelete: Cascade)

  @@id([user_id, group_id])
}

model WatchList {
  group_id Int
  movie_id Int

  group Group @relation(fields: [group_id], references: [id], onDelete: Cascade)
  movie Movie @relation(fields: [movie_id], references: [id], onDelete: Cascade)

  @@id([group_id, movie_id])
}

model ViewList {
  group_id Int
  movie_id Int

  group Group @relation(fields: [group_id], references: [id], onDelete: Cascade)
  movie Movie @relation(fields: [movie_id], references: [id], onDelete: Cascade)

  @@id([group_id, movie_id])
}

model Genre {
  id   Int    @id @default(autoincrement())
  name String

  movies GenreMovie[]
}

model GenreMovie {
  genre_id Int
  movie_id Int

  genre Genre @relation(fields: [genre_id], references: [id], onDelete: Cascade)
  movie Movie @relation(fields: [movie_id], references: [id], onDelete: Cascade)

  @@id([genre_id, movie_id])
}

// Based on The Movie DB API movie's model
model Movie {
  id           Int     @id @default(autoincrement())
  adult        Boolean @default(false)
  title        String
  language     String
  synopsis     String?
  image        String?
  release_date String?
  vote_average Float
  vote_count   Int?
  genre_ids    Int[]

  genres     GenreMovie[]
  watchLists WatchList[]
  viewLists  ViewList[]
}
